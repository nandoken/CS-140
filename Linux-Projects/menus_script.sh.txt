# Fernando Ames
# Assigment 06
# 03 March 2019
# This program is designed to be a menu with multiple user selectable
# CS 140u 

#!/bin/bash

#display menu function

#this function displays a menu on screen by using echo

display_menu(){

echo

echo "Command Menu"

echo

echo "a. Emailer Program"

echo "b. Display Users Currently Logged On"

echo "c. Display Current Date and Time"

echo "d. Display This months Calendar"

echo "e. Display name of the Working Directory"

echo "f. Display Contents of the Working Directory"

echo "g. Find the IP of a Web Address"

echo "h. See your Fortune"

echo "i. Display a file on the screen"

echo "j. Clear"

echo "k. Exit"

echo

}

#emailer function that sends email to the recipient

#by reading subject, emailaddress and file attachment

emailer(){

#define variables

email_subject="" # to store email subject

email_address="" # to store email address

email_attach_filename="" # to store filename for attachment

# display emailer intro and what it does

echo

echo "This program will allow you to send a message, with a file attachment, to any selected user"

echo

# read email subject

read -p "Please enter the subject of your message and press <enter>: " email_subject

echo

# read email address

read -p "Please enter email address of the recipient and hit <enter>: " email_address

echo

# read filename for attachment

read -p "Please enter the file to be attached to this message and press <enter>: " email_attach_filename

echo

# invoke mail command to send email

# -A for file attachment

# -s for subject

mail -A "$email_attach_filename" -s "$email_subject" "$email_address" < /dev/null

}

# function to display currently logged on users

display_curr_loggedon_users(){

who -H

}

# function to display current date and time

display_curr_date_time(){

date

}

# function to display this month calendar

display_this_month_calendar(){

cal

}


display_working_directory(){

# invoke pwd command

pwd

}

# function to display contents of working directory

display_contentsof_working_directory(){

ls

}

# function to find ip address of a web address

find_ip_of_webaddress(){

webaddress=""

# read web address from user

echo

read -p "Please enter the webaddress and press <enter>: " webaddress

echo

dig +short "$webaddress"

}

# function to display a fortune

see_fortune(){

fortune

}

# function to display a file

display_file(){

# variable to store filename

filename=""

# read a filename from user

echo

read -p "Please enter the filename and press <enter>, press 'q' to exit file: " filename

echo

# cat command to display a file with pipe less so it will cut the output by screen

cat "$filename" | less

}

# process options function

process_option(){

# check parameter in switch case

case "$1" in

# if a, call emailer

a)

emailer

;;

# if b, call display_curr_loggedon_users

b)

display_curr_loggedon_users

;;

# if c, display_curr_date_time

c)

display_curr_date_time

;;

# if d, display_this_month_calendar

d)

display_this_month_calendar

;;

# if e, display_working_directory

e)

display_working_directory

;;

# if f, display_contentsof_working_directory

f)

display_contentsof_working_directory

;;

# if g, find_ip_of_webaddress

g)

find_ip_of_webaddress

;;

# if h, see_fortune

h)

see_fortune

;;

# if i, display_file

i)

display_file

;;

# if j , then clear a screen, adding this extra option

j)

clear

;;

# if k, then exit from the script

k)

exit 0

;;

# if naything then display invalid option error

*)

echo "Invalid option"

;;

esac

}

# main program loop

# we nedd do-while loop

while : ; do

# define variable to store option

option=''

# display the menu on screen by calling function display_menu

display_menu

# read option from user

read -p "Please select a letter: " option

# call process_option function

# to perform operations according to the entered option by user

process_option $option

# the loop continues until option k is selected by the user

done
